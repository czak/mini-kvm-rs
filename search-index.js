var searchIndex = JSON.parse('{\
"kvm_rs":{"doc":"","t":[0,3,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,4,13,13,13,13,13,3,11,11,11,11,11,0,3,11,11,0,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,17,17,17,5,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["kvm","Kvm","new","create_vm","kvm_sys","kvm_regs","rax","rbx","rcx","rdx","rsi","rdi","rsp","rbp","r8","r9","r10","r11","r12","r13","r14","r15","rip","rflags","kvm_segment","base","limit","selector","type_","present","dpl","db","s","l","g","avl","kvm_dtable","base","limit","kvm_sregs","cs","ds","es","fs","gs","ss","tr","ldt","gdt","idt","cr0","cr2","cr3","cr4","cr8","efer","apic_base","interrupt_bitmap","vcpu","KvmExit","Halt","IoIn","IoOut","MmioRead","MmioWrite","Vcpu","get_regs","set_regs","get_sregs","set_sregs","run","vm","Vm","set_user_memory_region","create_vpcu","x86_64","RFLAGS_CF","RFLAGS_PF","RFLAGS_AF","RFLAGS_ZF","RFLAGS_SF","RFLAGS_IF","RFLAGS_DF","RFLAGS_OF","RFLAGS_IOPL","RFLAGS_AC","rflags_cf","rflags_pf","rflags_af","rflags_zf","rflags_sf","rflags_if","rflags_df","rflags_of","rflags_iopl","rflags_ac","SEG_SELECTOR_RPL","SEG_SELECTOR_TI","SEG_SELECTOR_INDEX","seg_selector_rpl","seg_selector_ti","seg_selector_index","CR0_PE","CR0_MP","CR0_EM","CR0_TS","CR0_ET","CR0_NE","CR0_WP","CR0_AM","CR0_NW","CR0_CD","CR0_PG","CR3_PAGE_BASE_MASK","CR3_PWT","CR3_PCD","CR4_PAE","CR4_LA57","MSR_EFER","EFER_LME","EFER_LMA","PAGE_ENTRY_PRESENT","PAGE_RENTRY_RW","PhysAddr","0","UserMem","new","with_init","load","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","as_mut","as_ref","default","default","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt"],"q":["kvm_rs","kvm_rs::kvm","","","kvm_rs","kvm_rs::kvm_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kvm_rs","kvm_rs::vcpu","","","","","","","","","","","","kvm_rs","kvm_rs::vm","","","kvm_rs","kvm_rs::x86_64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kvm_rs","","","","","","kvm_rs::kvm","","","","","","","kvm_rs::kvm_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kvm_rs::vcpu","","","","","","","","","","","","","","kvm_rs::vm","","","","","","","kvm_rs","","","","","","","","","","","","","","","","","kvm_rs::kvm_sys","","","","","","","","","","",""],"d":["KVM system ioctls.","Wrapper for <code>/dev/kvm</code> ioctls.","Open the <code>/dev/kvm</code> device.","Create a new virtual machine with the <code>KVM_CREATE_VM</code> ioctl.…","Definitions of the system header <code><linux/kvm.h></code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","VCPU system ioctls.","Exit reasons for the [<code>Vcpu::kvm_run</code>][…","","","","","","Wrapper for VCPU ioctls.","Get the general purpose registers with the <code>KVM_GET_REGS</code> …","Set the general purpose registers with the <code>KVM_SET_REGS</code> …","Get the special registers with the <code>KVM_GET_SREGS</code> ioctl in …","Set the special registers with the <code>KVM_SET_SREGS</code> ioctl in …","Run the guest VCPU with the <code>KVM_RUN</code> ioctl until it exits …","VM system ioctls.","Wrapper for VM ioctls.","Map memory from userspace into the VM as <code>guest physical</code> …","Create a new virtual cpu with the <code>KVM_CREATE_VCPU</code> ioctl. …","<code>x86_64</code> flags and bitfields.","Carry flag.","Parity flag.","Adjust flag.","Zero flag.","Sign flag.","Sign flag.","Direction flag.","Overflow flag.","I/O privilege level.","Alignment check.","","","","","","","","","","","Requested privilege level.","Table indicator.","Table index.","","","","Protection Enable.","Monitor Coprocessor.","Emulation.","Task Switched.","Extension Type.","Numeric Error.","Write Protect.","Alignment Mask.","Not Write-Torugh.","Cachine disable.","Paging.","Mask for physical base address of paging structure.","Page-level Write-Through.","Page-level Cache Disable.","Physical Address Extenstion.","57-bit Linear Addresses.","Extended Feature Enable Register MSR number.","Long Mode Enable.","Long Mode Active (readonly).","Page entry present.","Page region read/write.","Strong type representing physical addresses.","","Wrapper to safely allocate memory for guest VMs.","Allocate a zero-initialized memory region of <code>len</code> bytes.","Allocate a zero-initialized memory region of <code>len</code> bytes …","Load the bytes stored in <code>data</code> into memory at physical …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Free underlying memory.","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,0,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,0,7,7,7,7,7,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,10,10,10,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,2,3,4,5,2,3,4,5,2,3,4,5],"f":[null,null,[[],[["kvm",3],["result",6]]],[[],[["result",6],["vm",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6],["kvm_regs",3]]],[[["kvm_regs",3]],["result",6]],[[],[["result",6],["kvm_sregs",3]]],[[["kvm_sregs",3]],["result",6]],[[],[["result",6],["kvmexit",4]]],null,null,[[["physaddr",3],["usermem",3]],["result",6]],[[["u64",15]],[["result",6],["vcpu",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],[[["u64",15]],["u64",15]],null,null,null,[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],[[["u16",15]],["u16",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],[["result",6],["usermem",3]]],[[["usize",15]],[["result",6],["usermem",3]]],[[["physaddr",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["kvm_regs",3]],[[],["kvm_segment",3]],[[],["kvm_dtable",3]],[[],["kvm_sregs",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[3,"Kvm"],[3,"kvm_regs"],[3,"kvm_segment"],[3,"kvm_dtable"],[3,"kvm_sregs"],[4,"KvmExit"],[3,"Vcpu"],[3,"Vm"],[3,"PhysAddr"],[3,"UserMem"]]}\
}');
initSearch(searchIndex);